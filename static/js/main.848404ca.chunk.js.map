{"version":3,"sources":["Gif.js","App.js","serviceWorker.js","index.js"],"names":["Gif","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseEnter","e","srcElement","classList","add","querySelector","handleMouseLeave","remove","handleFavoriteClick","_this$props","gif","addFavorite","removeFavorite","state","favorite","setState","openModal","open","closeModal","ReactDOM","findDOMNode","addEventListener","_this$state","style","width","window","innerWidth","images","original","react_default","a","createElement","className","src","downsized_medium","url","alt","onClick","index_es","onClose","center","title","href","bitly_url","Component","App","loadMoreGifs","windowBottomY","pageYOffset","innerHeight","document","body","offsetHeight","view","getTrendingGifs","getSearchGifs","renderTrending","gifs","loading","offset","searchGifs","preventDefault","query","value","newFavorites","assign","favorites","id","renderFavorites","values","renderGifs","handleChange","target","key","onscroll","_this2","newOffset","axios","get","concat","then","response","nextGifBatch","data","catch","error","console","log","_this3","_this$state2","_this4","_this$state3","length","map","favorited","Boolean","Gif_Gif","_this$state4","onSubmit","onChange","type","placeholder","toUpperCase","location","hostname","match","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.848404ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-responsive-modal';\nimport ReactDOM from 'react-dom';\n\nexport default class Gif extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            favorite: props.favorite,\n        }\n    }\n\n    componentDidMount() {\n        const gif = ReactDOM.findDOMNode(this);\n        gif.addEventListener('mouseenter', this.handleMouseEnter);\n        gif.addEventListener('mouseleave', this.handleMouseLeave);\n    }\n\n    \n    /* Element event handlers */\n\n    handleMouseEnter = (e) => {\n        e.srcElement.classList.add('hover');\n        e.srcElement.querySelector('.favorite').classList.add('show');\n    }\n\n    handleMouseLeave = (e) => {\n        e.srcElement.classList.remove('hover');\n        e.srcElement.querySelector('.favorite').classList.remove('show');\n    }\n\n    handleFavoriteClick = () => {\n        const { gif, addFavorite, removeFavorite } = this.props;\n\n        if (this.state.favorite) {\n            this.setState({ favorite: false });\n            removeFavorite(gif);\n        } else {\n            this.setState({ favorite: true });\n            addFavorite(gif);\n        }\n    }\n\n\n    /* Modal handlers */\n\n    openModal = () => {\n        this.setState({ open: true });\n    };\n\n    closeModal = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { gif } = this.props,\n              { open, favorite } = this.state,\n              width = window.innerWidth - 65 > gif.images.original.width ? gif.images.original.width : window.innerWidth - 65,\n              style = { width };\n\n        return (\n            <div className=\"gif\">\n                <img src={gif.images.downsized_medium.url} \n                     alt=\"gif failed to load\" \n                     className=\"gif-img\" \n                     onClick={this.openModal}>\n                </img>\n                <div className={(() => favorite ? 'favorite favorited show' : 'favorite')()} onClick={this.handleFavoriteClick}>♥</div>\n                <Modal open={open} onClose={this.closeModal} center>\n                    <div className=\"gif-title\">{gif.title}</div>\n                    <img src={gif.images.original.url} \n                         alt=\"gif failed to load\" \n                         style={style}>\n                    </img>\n                    <div className=\"gif-url\">\n                        <div className={(() => favorite ? 'favorite-modal favorited' : 'favorite-modal')()} onClick={this.handleFavoriteClick}>♥</div>\n                        <a href={gif.bitly_url}>{gif.bitly_url}</a>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Gif from './Gif.js';\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      url: 'https://api.giphy.com/v1/gifs/',\n      gifs: [],\n      key:  'GoNup8Vhyxzuui7BE9WYUaBN&offset=',\n      view: 'trending',\n      offset: 0,\n      value: '', // search bar input value\n      query: '', // search query\n      favorites: {},\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    this.getTrendingGifs();\n    window.onscroll = this.loadMoreGifs;\n  }\n\n\n  /* infinite scroll/load */\n\n  loadMoreGifs = () => {\n    const windowBottomY = window.pageYOffset + window.innerHeight,\n          appHeight = document.body.offsetHeight;\n\n    if (appHeight - windowBottomY < 150) {\n      if (this.state.view === 'trending') {\n        this.getTrendingGifs();\n      } \n      if (this.state.view === 'search') {\n        this.getSearchGifs();\n      }\n    }\n  }\n\n\n  /* Trending gifs */\n\n  renderTrending = () => {\n    this.setState({\n      view: 'trending',\n      gifs: [],\n      loading: true,\n      offset: 0\n    }, this.getTrendingGifs);\n  }\n\n  getTrendingGifs() {\n    const { url, gifs, key, offset } = this.state,\n          newOffset = offset + 24;\n\n    axios.get(`${url}trending?api_key=jZRfFuMp${key}${offset}&limit=24`)\n      .then((response) => {\n        const nextGifBatch = response.data.data;\n        this.setState({ gifs: gifs.concat(nextGifBatch), offset: newOffset, loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ gifs: [], loading: false });\n      });\n  }\n\n\n  /* Searching gifs */\n\n  searchGifs = (e) => {\n    e.preventDefault();\n    this.setState({\n        view: 'search',\n        gifs: [],\n        loading: true,\n        offset: 0,\n        query: this.state.value\n    }, this.getSearchGifs);\n  }\n\n  getSearchGifs() {\n    const { url, gifs, key, offset, query } = this.state,\n          newOffset = offset + 24;\n\n    axios.get(`${url}search?api_key=jZRfFuMp${key}${offset}&limit=24&q=${query}`)\n      .then((response) => {\n        const nextGifBatch = response.data.data;\n        this.setState({ gifs: gifs.concat(nextGifBatch), offset: newOffset, loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ gifs: [], loading: false });\n      });\n  }\n\n\n  /*  Add, remove and render favorites */\n  \n  addFavorite = (gif) => {\n    const newFavorites = Object.assign({}, this.state.favorites);\n    newFavorites[gif.id] = gif;\n    this.setState({ favorites: newFavorites });\n  }\n\n  removeFavorite = (gif) => {\n    const newFavorites = Object.assign({}, this.state.favorites);\n    delete newFavorites[gif.id];\n    this.setState({ favorites: newFavorites }, () => this.state.view === 'favorite' ? this.renderFavorites() : null);\n  }\n\n  renderFavorites = () => {\n    this.setState({ \n      view: 'favorite',\n      gifs: Object.values(this.state.favorites)\n    }, this.renderGifs);\n  }\n\n\n  /* Form input event handler */\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n  }\n\n  \n  /* Rendering gifs */\n\n  renderGifs() {\n    const { gifs, view, favorites, loading } = this.state;\n\n    if (gifs.length === 0 && !loading) {\n      return <div id=\"error\">NO GIFS...</div>\n    }\n    \n    return gifs.map(gif => {\n      let favorited = Boolean(favorites[gif.id]);\n      if (view === 'favorite') favorited = true;\n      return (\n        <Gif gif={gif}\n          key={gif.id}\n          favorite={favorited}\n          addFavorite={this.addFavorite}\n          removeFavorite={this.removeFavorite}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { value, view } = this.state;\n    return (\n      <div className=\"App\">\n        <div id=\"top-bar\">\n          <div id=\"logo\" onClick={this.renderTrending}>\n            <img src=\"spliffy.gif\" alt=\"(_______)\" id=\"spliffy-logo\"></img>\n            <span id=\"spliffy-text\">SPLIFFY</span>\n          </div>\n          <div id=\"search-bar\">\n            <form id=\"search-input\" onSubmit={this.searchGifs}>\n              <div>\n                <input value={value} onChange={this.handleChange} type=\"text\" placeholder=\"Search all gifs\"/>\n              </div>\n            </form>\n          </div>\n          <img src=\"search.png\" id=\"search-button\" alt=\"search\" onClick={this.searchGifs}/>\n        </div>\n        <div id=\"middle-bar\">\n          <div id=\"view\">{view.toUpperCase()} GIFS</div>\n          <button type=\"button\" id=\"favorites-button\" onClick={this.renderFavorites}>\n            <span id=\"favorites-text\">FAVORITES</span>\n            <span id=\"favorites-heart\">♥</span>\n          </button>\n        </div>\n        <div id=\"gifs-container\">\n          {this.renderGifs()}\n        </div>\n      </div>\n    );\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}